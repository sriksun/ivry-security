<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified" 
            targetNamespace="uri:ivory:database:0.1" xmlns="uri:ivory:database:0.1"
            xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" jaxb:version="2.1">
    <xs:annotation>
        <xs:documentation>
            Licensed to the Apache Software Foundation (ASF) under one or more
            contributor license agreements. See the NOTICE file distributed with
            this work for additional information regarding copyright ownership.
            The ASF licenses this file to You under the Apache License, Version
            2.0
            (the "License"); you may not use this file except in compliance with
            the License. You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

            Unless required by applicable law or agreed to in writing, software
            distributed under the License is distributed on an "AS IS" BASIS,
            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
            implied.
            See the License for the specific language governing permissions and
            limitations under the License.
        </xs:documentation>
        <xs:appinfo>
            <jaxb:schemaBindings>
                <jaxb:package name="org.apache.ivory.entity.v0.database" />
            </jaxb:schemaBindings>
        </xs:appinfo>
    </xs:annotation>

    <xs:element name="database" type="database">
    </xs:element>

    <xs:complexType name="database">
        <xs:annotation>
            <xs:documentation>The cluster contains the definition of different
                interfaces which are used by Ivory like readonly, write, workflow and messaging.
                A cluster is referenced by feeds and processes which are on-boarded
                to Ivory by its name.
                name: the name of cluster, which must be unique.
                colo: the name of the colo to which this cluster belongs to.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element type="interfaces" name="interfaces" />
            <xs:element type="properties" name="properties" minOccurs="0" />
            <xs:element type="xs:string" name="driver" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute type="IDENTIFIER" name="name" use="required" />
        <xs:attribute type="xs:string" name="description" />
        <xs:attribute type="xs:string" name="colo" use="required" />
        <xs:attribute type="xs:string" name="type" use="required">
            <xs:annotation>
                <xs:documentation>
                    Database Type: MySQL, Oracle, MS SQL Server, Teradata, etc.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="interfaces">
        <xs:annotation>
            <xs:documentation>
                A list of interfaces.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element type="interface" name="interface" maxOccurs="unbounded" minOccurs="2" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="interface">
        <xs:annotation>
            <xs:documentation>
                An interface specifies the interface type, Ivory uses it to
                schedule entities in workflow engine, to save and read data
                from the database.
                endpoint: is the url for each interface;
                examples: for read/write it is the jdbc url of the database.
                version: The current runtime version of each interface.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute type="interfacetype" name="type" use="required" />
        <xs:attribute type="xs:string" name="endpoint" use="required" />
        <xs:attribute type="xs:string" name="version" use="required" />
    </xs:complexType>

    <xs:simpleType name="interfacetype">
        <xs:annotation>
            <xs:documentation>
                An interface has 2 different interface types: readonly, write.
                readonly specifies the database's jdbc address.
                write specifies the interface to write to the DB
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="readonly" /> <!-- import -->
            <xs:enumeration value="write" /> <!-- export -->
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="properties">
        <xs:annotation>
            <xs:documentation>
                A list of property elements.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element type="property" name="property" maxOccurs="unbounded" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="property">
        <xs:annotation>
            <xs:documentation>
                A key-value pair, which are propagated to the
                workflow engine.
                Ideally the database name, table name or query should be
                defined here.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute type="xs:string" name="name" use="required" />
        <xs:attribute type="xs:string" name="value" use="required" />
    </xs:complexType>

    <xs:simpleType name="IDENTIFIER">
        <xs:restriction base="xs:string">
            <xs:pattern value="(([a-zA-Z]([\-a-zA-Z0-9])*){1,39})" />
        </xs:restriction>
    </xs:simpleType>
</xs:schema>